{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hase\\\\Desktop\\\\Taz-Project\\\\my-react-app\\\\src\\\\components\\\\PostsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts`);\n        console.log('API Request:', response);\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        console.log('API Response:', data);\n        // レスポンスのデータ構造を確認し、必要に応じて修正\n        if (Array.isArray(data)) {\n          setPosts(data);\n        } else if (data && Array.isArray(data.posts)) {\n          setPosts(data.posts);\n        } else {\n          throw new Error('Invalid API response format');\n        }\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/post/${post.id}`,\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n              className: \"published\",\n              dateTime: post.published_at,\n              children: new Date(post.published_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/post/${post.id}`,\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.image_url,\n              alt: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostsList","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","response","fetch","process","env","REACT_APP_API_BASE_URL","console","log","ok","Error","data","json","Array","isArray","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","href","id","title","dateTime","published_at","Date","toLocaleDateString","src","image_url","alt","_c","$RefreshReg$"],"sources":["C:/Users/hase/Desktop/Taz-Project/my-react-app/src/components/PostsList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PostsList = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts`);\r\n                console.log('API Request:', response);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                console.log('API Response:', data);\r\n                // レスポンスのデータ構造を確認し、必要に応じて修正\r\n                if (Array.isArray(data)) {\r\n                  setPosts(data);\r\n                } else if (data && Array.isArray(data.posts)) {\r\n                  setPosts(data.posts);\r\n                } else {\r\n                  throw new Error('Invalid API response format');\r\n                }\r\n            } catch (err) {\r\n                console.error('Error fetching posts:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <ul className=\"posts\">\r\n                {posts.map((post) => (\r\n                    <li key={post.id}>\r\n                        <article>\r\n                            <header>\r\n                                <h3><a href={`/post/${post.id}`}>{post.title}</a></h3>\r\n                                <time className=\"published\" dateTime={post.published_at}>\r\n                                    {new Date(post.published_at).toLocaleDateString()}\r\n                                </time>\r\n                            </header>\r\n                            <a href={`/post/${post.id}`} className=\"image\">\r\n                                <img src={post.image_url} alt={post.title} />\r\n                            </a>\r\n                        </article>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default PostsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}