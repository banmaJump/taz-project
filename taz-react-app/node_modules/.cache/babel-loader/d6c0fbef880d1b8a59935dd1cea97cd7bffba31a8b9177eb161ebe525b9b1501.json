{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hase\\\\Desktop\\\\Taz-Project\\\\my-react-app\\\\src\\\\components\\\\MiniPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // React Routerを使用する場合\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiniPost = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // React Routerを使用する場合\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch post');\n        }\n        const data = await response.json();\n        setPost(data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    };\n    fetchPost();\n  }, [id]); // idが変更されたときに再取得\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"mini-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/post/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n        className: \"published\",\n        dateTime: post.published_at,\n        children: new Date(post.published_at).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/author/${post.author_id}`,\n        className: \"author\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.author_img,\n          alt: post.author_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `/post/${post.id}`,\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image_url,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(MiniPost, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n_c = MiniPost;\nexport default MiniPost;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const MiniPost = () => {\n//     const { id } = useParams();\n//     const [post, setPost] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//         if (id) { // idが存在する場合のみAPIリクエストを実行\n//             const fetchPost = async () => {\n//                 setLoading(true);\n//                 setError(null);\n//                 try {\n//                     const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts/${id}`);\n//                     if (!response.ok) {\n//                         throw new Error('Failed to fetch post');\n//                     }\n//                     const data = await response.json();\n//                     setPost(data);\n//                 } catch (err) {\n//                     console.error('Error fetching post:', err);\n//                     setError(err.message);\n//                 } finally {\n//                     setLoading(false);\n//                 }\n//             };\n\n//             fetchPost();\n//         } else {\n//             setLoading(false);\n//             setError('Post ID is undefined');\n//         }\n//     }, [id]);\n\n//     if (loading) {\n//         return <div>Loading...</div>;\n//     }\n\n//     if (error) {\n//         return <div>Error: {error}</div>;\n//     }\n\n//     return (\n//         <article className=\"mini-post\">\n//             <header>\n//                 <h3><a href={`/post/${post.id}`}>{post.title}</a></h3>\n//                 <time className=\"published\" dateTime={post.published_at}>\n//                     {new Date(post.published_at).toLocaleDateString()}\n//                 </time>\n//                 <a href={`/category/${post.category_id}`}><img src={post.category_img_url} alt={post.category_name} /></a>\n//             </header>\n//             <a href={`/post/${post.id}`} className=\"image\"><img src={post.image_url} alt={post.title} /></a>\n//         </article>\n//     );\n// };\n\n// export default MiniPost;\nvar _c;\n$RefreshReg$(_c, \"MiniPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","MiniPost","_s","id","post","setPost","fetchPost","response","fetch","process","env","REACT_APP_API_BASE_URL","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","title","dateTime","published_at","Date","toLocaleDateString","author_id","src","author_img","alt","author_name","image_url","_c","$RefreshReg$"],"sources":["C:/Users/hase/Desktop/Taz-Project/my-react-app/src/components/MiniPost.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // React Routerを使用する場合\r\n\r\nconst MiniPost = () => {\r\n    const { id } = useParams(); // React Routerを使用する場合\r\n    const [post, setPost] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts/${id}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch post');\r\n                }\r\n                const data = await response.json();\r\n                setPost(data);\r\n            } catch (error) {\r\n                console.error('Error fetching post:', error);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n    }, [id]); // idが変更されたときに再取得\r\n\r\n    if (!post) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <article className=\"mini-post\">\r\n            <header>\r\n                <h3><a href={`/post/${post.id}`}>{post.title}</a></h3>\r\n                <time className=\"published\" dateTime={post.published_at}>\r\n                    {new Date(post.published_at).toLocaleDateString()}\r\n                </time>\r\n                <a href={`/author/${post.author_id}`} className=\"author\"><img src={post.author_img} alt={post.author_name} /></a>\r\n            </header>\r\n            <a href={`/post/${post.id}`} className=\"image\"><img src={post.image_url} alt={post.title} /></a>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default MiniPost;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const MiniPost = () => {\r\n//     const { id } = useParams();\r\n//     const [post, setPost] = useState(null);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         if (id) { // idが存在する場合のみAPIリクエストを実行\r\n//             const fetchPost = async () => {\r\n//                 setLoading(true);\r\n//                 setError(null);\r\n//                 try {\r\n//                     const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts/${id}`);\r\n//                     if (!response.ok) {\r\n//                         throw new Error('Failed to fetch post');\r\n//                     }\r\n//                     const data = await response.json();\r\n//                     setPost(data);\r\n//                 } catch (err) {\r\n//                     console.error('Error fetching post:', err);\r\n//                     setError(err.message);\r\n//                 } finally {\r\n//                     setLoading(false);\r\n//                 }\r\n//             };\r\n\r\n//             fetchPost();\r\n//         } else {\r\n//             setLoading(false);\r\n//             setError('Post ID is undefined');\r\n//         }\r\n//     }, [id]);\r\n\r\n//     if (loading) {\r\n//         return <div>Loading...</div>;\r\n//     }\r\n\r\n//     if (error) {\r\n//         return <div>Error: {error}</div>;\r\n//     }\r\n\r\n//     return (\r\n//         <article className=\"mini-post\">\r\n//             <header>\r\n//                 <h3><a href={`/post/${post.id}`}>{post.title}</a></h3>\r\n//                 <time className=\"published\" dateTime={post.published_at}>\r\n//                     {new Date(post.published_at).toLocaleDateString()}\r\n//                 </time>\r\n//                 <a href={`/category/${post.category_id}`}><img src={post.category_img_url} alt={post.category_name} /></a>\r\n//             </header>\r\n//             <a href={`/post/${post.id}`} className=\"image\"><img src={post.image_url} alt={post.title} /></a>\r\n//         </article>\r\n//     );\r\n// };\r\n\r\n// export default MiniPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}