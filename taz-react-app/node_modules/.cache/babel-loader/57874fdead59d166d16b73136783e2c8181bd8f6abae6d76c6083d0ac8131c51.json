{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hase\\\\Desktop\\\\Taz-Project\\\\my-react-app\\\\src\\\\components\\\\OrderedPostsList.jsx\",\n  _s = $RefreshSig$();\n// OrderedPostsList.jsx\nimport React, { useState, useEffect } from 'react';\nimport MiniPost from './MiniPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderedPostsList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchOrderedPosts = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts/ordered`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch ordered posts');\n        }\n        const data = await response.json();\n        setPosts(data);\n        console.log(\"API Response:\", data); // APIレスポンスをコンソールに表示\n      } catch (err) {\n        console.error('Error fetching ordered posts:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchOrderedPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (!posts || posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini-posts\",\n    children: posts.map(post => {\n      return post && /*#__PURE__*/_jsxDEV(MiniPost, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderedPostsList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = OrderedPostsList;\nexport default OrderedPostsList;\nvar _c;\n$RefreshReg$(_c, \"OrderedPostsList\");","map":{"version":3,"names":["React","useState","useEffect","MiniPost","jsxDEV","_jsxDEV","OrderedPostsList","_s","posts","setPosts","loading","setLoading","error","setError","fetchOrderedPosts","response","fetch","process","env","REACT_APP_API_BASE_URL","ok","Error","data","json","console","log","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","post","id","_c","$RefreshReg$"],"sources":["C:/Users/hase/Desktop/Taz-Project/my-react-app/src/components/OrderedPostsList.jsx"],"sourcesContent":["// OrderedPostsList.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport MiniPost from './MiniPost';\r\n\r\nconst OrderedPostsList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchOrderedPosts = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/posts/ordered`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch ordered posts');\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data);\r\n        console.log(\"API Response:\", data); // APIレスポンスをコンソールに表示\r\n      } catch (err) {\r\n        console.error('Error fetching ordered posts:', err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrderedPosts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  if (!posts || posts.length === 0) {\r\n    return <div>No posts found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='mini-posts'>\r\n      {posts.map((post) => {\r\n        return post && <MiniPost key={post.id} post={post} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderedPostsList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpCH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,oBAAoB,CAAC;QACvF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCd,QAAQ,CAACa,IAAI,CAAC;QACdE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZF,OAAO,CAACZ,KAAK,CAAC,+BAA+B,EAAEc,GAAG,CAAC;QACnDb,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRhB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAuB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIpB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAuB,QAAA,GAAK,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,IAAI,CAACxB,KAAK,IAAIA,KAAK,CAACyB,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAO5B,OAAA;MAAAuB,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACE3B,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAAAN,QAAA,EACxBpB,KAAK,CAAC2B,GAAG,CAAEC,IAAI,IAAK;MACnB,OAAOA,IAAI,iBAAI/B,OAAA,CAACF,QAAQ;QAAeiC,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IACvD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/CID,gBAAgB;AAAAgC,EAAA,GAAhBhC,gBAAgB;AAiDtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}