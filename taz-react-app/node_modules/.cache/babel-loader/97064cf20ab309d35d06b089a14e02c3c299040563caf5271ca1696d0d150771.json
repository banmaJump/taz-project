{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hase\\\\Desktop\\\\Taz-Project\\\\my-react-app\\\\src\\\\components\\\\PostsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header'; // Headerコンポーネントをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(''); // 検索キーワードをstateで管理\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        let url = `${process.env.REACT_APP_API_BASE_URL}/api/posts`;\n        if (searchQuery) {\n          const encodedQuery = encodeURIComponent(searchQuery); // エンコード\n          url = `<span class=\"math-inline\">\\{process\\.env\\.REACT\\_APP\\_API\\_BASE\\_URL\\}/api/search?query\\=</span>{encodedQuery}`;\n        }\n        const response = await fetch(url);\n        console.log('API Request:', response);\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        console.log('API Response:', data);\n        // レスポンスのデータ構造を確認し、必要に応じて修正\n        if (Array.isArray(data)) {\n          setPosts(data);\n        } else if (data && Array.isArray(data.posts)) {\n          setPosts(data.posts);\n        } else {\n          throw new Error('Invalid API response format');\n        }\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [searchQuery]); // searchQueryが変更されたらAPIリクエストを再実行\n\n  const handleSearch = query => {\n    setSearchQuery(query); // 検索キーワードをstateに設定\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"posts\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `/post/${post.id}`,\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                className: \"published\",\n                dateTime: post.published_at,\n                children: new Date(post.published_at).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/post/${post.id}`,\n              className: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.image_url,\n                alt: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsList, \"FGPO3Ucx6YkQ9NT3bHXkNzpHK1A=\");\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["React","useState","useEffect","Header","jsxDEV","_jsxDEV","PostsList","_s","posts","setPosts","loading","setLoading","error","setError","searchQuery","setSearchQuery","fetchPosts","url","process","env","REACT_APP_API_BASE_URL","encodedQuery","encodeURIComponent","response","fetch","console","log","ok","Error","data","json","Array","isArray","err","message","handleSearch","query","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","className","map","post","href","id","title","dateTime","published_at","Date","toLocaleDateString","src","image_url","alt","_c","$RefreshReg$"],"sources":["C:/Users/hase/Desktop/Taz-Project/my-react-app/src/components/PostsList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header'; // Headerコンポーネントをインポート\r\n\r\nconst PostsList = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchQuery, setSearchQuery] = useState(''); // 検索キーワードをstateで管理\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            try {\r\n                let url = `${process.env.REACT_APP_API_BASE_URL}/api/posts`;\r\n              if (searchQuery) {\r\n                  const encodedQuery = encodeURIComponent(searchQuery); // エンコード\r\n                  url = `<span class=\"math-inline\">\\{process\\.env\\.REACT\\_APP\\_API\\_BASE\\_URL\\}/api/search?query\\=</span>{encodedQuery}`;\r\n              }\r\n                const response = await fetch(url);\r\n                console.log('API Request:', response);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                console.log('API Response:', data);\r\n                // レスポンスのデータ構造を確認し、必要に応じて修正\r\n                if (Array.isArray(data)) {\r\n                    setPosts(data);\r\n                } else if (data && Array.isArray(data.posts)) {\r\n                    setPosts(data.posts);\r\n                } else {\r\n                    throw new Error('Invalid API response format');\r\n                }\r\n            } catch (err) {\r\n                console.error('Error fetching posts:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [searchQuery]); // searchQueryが変更されたらAPIリクエストを再実行\r\n\r\n    const handleSearch = (query) => {\r\n        setSearchQuery(query); // 検索キーワードをstateに設定\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header onSearch={handleSearch} /> {/* HeaderコンポーネントにonSearchをpropsとして渡す */}\r\n            <section>\r\n                <ul className=\"posts\">\r\n                    {posts.map((post) => (\r\n                        <li key={post.id}>\r\n                            <article>\r\n                                <header>\r\n                                    <h3><a href={`/post/${post.id}`}>{post.title}</a></h3>\r\n                                    <time className=\"published\" dateTime={post.published_at}>\r\n                                        {new Date(post.published_at).toLocaleDateString()}\r\n                                    </time>\r\n                                </header>\r\n                                <a href={`/post/${post.id}`} className=\"image\">\r\n                                    <img src={post.image_url} alt={post.title} />\r\n                                </a>\r\n                            </article>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}