{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./Header';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostsList=()=>{const[posts,setPosts]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[searchQuery,setSearchQuery]=useState('');useEffect(()=>{const fetchPosts=async()=>{setLoading(true);setError(null);try{let url=`${process.env.REACT_APP_API_BASE_URL}/api/posts`;if(searchQuery){const params=new URLSearchParams({query:searchQuery});url=`${process.env.REACT_APP_API_BASE_URL}/api/search?${params.toString()}`;}const response=await fetch(url);if(!response.ok){throw new Error(`Failed to fetch posts: ${response.status}`);}const data=await response.json();if(Array.isArray(data)){setPosts(data);}else if(data&&Array.isArray(data.posts)){setPosts(data.posts);}else{throw new Error('Invalid API response format');}}catch(err){setError(`Failed to fetch posts: ${err.message}`);}finally{setLoading(false);}};fetchPosts();},[searchQuery]);const handleSearch=query=>{setSearchQuery(query);};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{onSearch:handleSearch}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"posts\",children:[posts.length===0&&searchQuery&&/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u300C\",searchQuery,\"\\u300D\\u306B\\u4E00\\u81F4\\u3059\\u308B\\u691C\\u7D22\\u7D50\\u679C\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"]}),posts.map(post=>{const postImageUrl=`${process.env.PUBLIC_URL}/images/${post.image_url}`;return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"article\",{children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"a\",{href:`/post/${post.id}`,children:post.title})}),/*#__PURE__*/_jsx(\"time\",{className:\"published\",dateTime:post.published_at,children:new Date(post.published_at).toLocaleDateString()})]}),/*#__PURE__*/_jsx(\"a\",{href:`/post/${post.id}`,className:\"image\",children:/*#__PURE__*/_jsx(\"img\",{src:postImageUrl,alt:post.title})})]})},post.id);})]})})]});};export default PostsList;","map":{"version":3,"names":["React","useState","useEffect","Header","jsx","_jsx","jsxs","_jsxs","PostsList","posts","setPosts","loading","setLoading","error","setError","searchQuery","setSearchQuery","fetchPosts","url","process","env","REACT_APP_API_BASE_URL","params","URLSearchParams","query","toString","response","fetch","ok","Error","status","data","json","Array","isArray","err","message","handleSearch","children","onSearch","className","length","map","post","postImageUrl","PUBLIC_URL","image_url","href","id","title","dateTime","published_at","Date","toLocaleDateString","src","alt"],"sources":["C:/Users/hase/Desktop/Taz-Project/taz-react-app/src/components/PostsList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\n\r\nconst PostsList = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n            try {\r\n                let url = `${process.env.REACT_APP_API_BASE_URL}/api/posts`;\r\n                if (searchQuery) {\r\n                    const params = new URLSearchParams({ query: searchQuery });\r\n                    url = `${process.env.REACT_APP_API_BASE_URL}/api/search?${params.toString()}`;\r\n                }\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch posts: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                if (Array.isArray(data)) {\r\n                    setPosts(data);\r\n                } else if (data && Array.isArray(data.posts)) {\r\n                    setPosts(data.posts);\r\n                } else {\r\n                    throw new Error('Invalid API response format');\r\n                }\r\n            } catch (err) {\r\n                setError(`Failed to fetch posts: ${err.message}`);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [searchQuery]);\r\n\r\n    const handleSearch = (query) => {\r\n        setSearchQuery(query);\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header onSearch={handleSearch} />\r\n            <section>\r\n                <ul className=\"posts\">\r\n                    {posts.length === 0 && searchQuery && <li>「{searchQuery}」に一致する検索結果はありません。</li>}\r\n                    {posts.map((post) => {\r\n                        const postImageUrl = `${process.env.PUBLIC_URL}/images/${post.image_url}`;\r\n                        return (\r\n                            <li key={post.id}>\r\n                                <article>\r\n                                    <header>\r\n                                        <h3><a href={`/post/${post.id}`}>{post.title}</a></h3>\r\n                                        <time className=\"published\" dateTime={post.published_at}>\r\n                                            {new Date(post.published_at).toLocaleDateString()}\r\n                                        </time>\r\n                                    </header>\r\n                                    <a href={`/post/${post.id}`} className=\"image\">\r\n                                        <img src={postImageUrl} alt={post.title} />\r\n                                    </a>\r\n                                </article>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}